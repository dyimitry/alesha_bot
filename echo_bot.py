from typing import List
import sqlite3

import telebot
# from telebot import types  # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
import datetime as dt
import psycopg2
import os

from dotenv import load_dotenv
from telebot import types

load_dotenv()
token = os.getenv('TOKEN')
bot = telebot.TeleBot(token)

# TODO(dshinkariov): change hardcode localhost on env variables
conn = psycopg2.connect(dbname='postgres', user='postgres',
                        password='dima_postgres', host='db') #(localhost)
cursor = conn.cursor()


def db_table_val(user_id: int, user_name: str, user_surname: str, username: str):
    cursor.execute("SELECT id FROM alesha WHERE user_id = %s", (user_id,))
    row = cursor.fetchone()

    if not row:
        cursor.execute("INSERT INTO alesha (user_id, user_name, user_surname, username)  VALUES (%s, %s, %s, %s)",
                       (user_id, user_name, user_surname, username))
        row = cursor.fetchone()
    return row


def db_table_text(text: str, alesha_id: int):
    cursor.execute("INSERT INTO text ( text, alesha_id)  VALUES (%s, %s)",
                   (text, alesha_id))
    conn.commit()


def returning(user_id: int, user_name: str, user_surname: str, username: str):
    cursor.execute("SELECT id FROM alesha WHERE user_id = %s", (user_id,))
    row = cursor.fetchone()

    if not row:
        cursor.execute(
            "INSERT INTO alesha (user_id, user_name, user_surname, username)  VALUES (%s, %s, %s, %s) RETURNING id",
            (user_id, user_name, user_surname, username))
        row = cursor.fetchone()
    return row
    # conn.commit()


def raschet(count_days_before_sutki: int, frequence_days: int, number_month: int) -> List[int]:
    """
    —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤ –∫–∞–∫–∏–µ –¥–Ω–∏ –Ω–∞–º –Ω–∞ —Ä–∞–±–æ—Ç—É

    count_days_before_sutki: –æ—Å—Ç—É–ø–∞–µ–º —Å—Ç–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Ç —Å–µ–≥–æ–¥–Ω—è , –¥–æ —Ç–æ–≥–æ –¥–Ω—è –∫–æ–≥–¥–∞ —É –Ω–∞—Å —Å—É—Ç–∫–∏
    frequence_days: –æ—Ç —Å—É—Ç–æ–∫ –≤–∫–ª—é—á–∞—è –∏—Ö –¥–æ —Å–ª–µ–¥—É—é—â–∏—Ö —Å—É—Ç–æ–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç–æ–ª—å–∫–æ –¥–Ω–µ–π
    """

    list = []
    if number_month == 1 or number_month == 3 or number_month == 5 or number_month == 7 or number_month == 8 or number_month == 10 or number_month == 12:
        days_in_month = 31
        a = dt.datetime.today().day + count_days_before_sutki  # 4
        while (a <= days_in_month):
            list.append(a)
            a += frequence_days  # 5
    if number_month == 2:
        days_in_month = 28
        a = dt.datetime.today().day + count_days_before_sutki  # 4
        while (a <= days_in_month):
            list.append(a)
            a += frequence_days
    if number_month == 4 or number_month == 6 or number_month == 9 or number_month == 11:
        days_in_month = 30
        a = dt.datetime.today().day + count_days_before_sutki  # 4
        while (a <= days_in_month):
            list.append(a)
            a += frequence_days
    return list


# @bot.message_handler(content_types=['text'])
# def zaregan_li(message):
#     user_id = message.from_user.id
#     user_name = message.from_user.first_name
#     user_surname = message.from_user.last_name
#     username = message.from_user.username
#     if message.content_type == 'text':
#         cursor.execute("SELECT id FROM alesha WHERE user_id = %s", (user_id,))
#     row = cursor.fetchone()
#
#     if not row:
#         cursor.execute("INSERT INTO alesha (user_id, user_name, user_surname, username)  VALUES (%s, %s, %s, %s)",
#                        (user_id, user_name, user_surname, username))
#         row = cursor.fetchone()
#     return row
#
# a = zaregan_li(–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏ ?)


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –∫–∞–∫–æ–π –≥—Ä–∞—Ñ–∏–∫")
    btn3 = types.KeyboardButton("–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏ ?")
    markup.add(btn1, btn2, btn3)
    bot.send_message(
        message.chat.id,
        text=f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ!",
        reply_markup=markup)

    us_id = message.from_user.id
    us_name = message.from_user.first_name
    us_sname = message.from_user.last_name
    username = message.from_user.username
    db_table_val(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username)

    text = message.text
    a = returning(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username)
    db_table_text(text=text, alesha_id=a)


@bot.message_handler(content_types=['text'])
def func(message):
    current_data = dt.datetime.now()
    current_day = current_data.day
    current_month = current_data.month
    # if message.content_types == 'text':
    #     cursor.execute =("SE")
    if message.text == "–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏ ?":
        alesha_id = message.from_user.id
        cursor.execute("SELECT count_days_chill FROM chil WHERE alesha_id = %s ORDER BY id DESC ", (alesha_id,))
        row = cursor.fetchone()
        if row is None:
            bot.send_message(
                message.chat.id,
                text=(
                    f"–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥—Ä–∞—Ñ–∏–∫")
            )
            return
        if row is not None:
            iscomoe = row[0][0]
            data = dt.datetime.today().day
            if iscomoe == data:
                bot.send_message(
                    message.chat.id,
                    text=(
                        f"–≤—ã —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Å—É—Ç–∫–∞—Ö")
                )
                return
            elif iscomoe is not None:
                bot.send_message(
                    message.chat.id,
                    text=(
                        f"{iscomoe}")
                )
                return
            elif iscomoe is None:
                bot.send_message(
                    message.chat.id,
                    text=(f"{message.from_user.first_name} –ó–ê–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ ")
                )
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(
            message.chat.id,
            text=(
                f"–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}. "
                f"–°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ä–µ—à–∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å!)")
        )
    elif (message.text == "‚ùì –∫–∞–∫–æ–π –≥—Ä–∞—Ñ–∏–∫"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("1/1")
        btn2 = types.KeyboardButton("1/2")
        btn3 = types.KeyboardButton("1/3")
        btn4 = types.KeyboardButton("1/4")
        btn5 = types.KeyboardButton(
            "–Ω–∏–∫—Ç–æ –±–æ–ª—å—à–µ —á–µ–º 4 –¥–Ω—è –Ω–µ –æ—Ç–¥—ã—Ö–∞–µ—Ç, –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π!)")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, btn3, btn4, btn5, back)
        bot.send_message(
            message.chat.id,
            text="1 —Ä–∞–±–æ—á–∏–π/ —Ö - –¥–Ω–µ–π –æ—Ç–¥—ã—Ö–∞?", reply_markup=markup)

    elif (message.text == "1/1"):
        # user_id = message.from_user.id
        # count_days_chill = 1
        # cursor.execute(
        #     "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        # cursor.fetchone()

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn11 = types.KeyboardButton(f"{current_day}")
        btn22 = types.KeyboardButton(f"{current_day + 1}")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn11, btn22, back)
        bot.send_message(
            message.chat.id,
            text="–∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω–∞ —Ä–∞–±–æ—Ç—É?", reply_markup=markup)

    elif (message.text == "1/2"):
        # user_id = message.from_user.id
        # count_days_chill = 2
        # cursor.execute(
        #     "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        # cursor.fetchone()

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn11 = types.KeyboardButton(f"{current_day} —á–∏—Å–ª–æ")
        btn22 = types.KeyboardButton(f"{current_day + 1} —á–∏—Å–ª–æ")
        btn33 = types.KeyboardButton(f"{current_day + 2} —á–∏—Å–ª–æ")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn11, btn22, btn33, back)
        bot.send_message(
            message.chat.id,
            text="–∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω–∞ —Ä–∞–±–æ—Ç—É?", reply_markup=markup)

    elif (message.text == "1/3"):
        # user_id = message.from_user.id
        # count_days_chill = 3
        # cursor.execute(
        #     "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        # cursor.fetchone()

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn11 = types.KeyboardButton(f"{current_day} —á.")
        btn22 = types.KeyboardButton(f"{current_day + 1} —á.")
        btn33 = types.KeyboardButton(f"{current_day + 2} —á.")
        btn44 = types.KeyboardButton(f"{current_day + 3} —á.")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn11, btn22, btn33, btn44, back)
        bot.send_message(
            message.chat.id,
            text="–ö–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É?", reply_markup=markup
        )

    elif (message.text == "1/4"):
        # user_id = message.from_user.id
        # count_days_chill = 4
        # cursor.execute(
        #     "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        # cursor.fetchone()

        data = dt.datetime.now()
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn11 = types.KeyboardButton(f"{current_day} —á–∏—Å–ª–∞")
        btn22 = types.KeyboardButton(f"{current_day + 1} —á–∏—Å–ª–∞")
        btn33 = types.KeyboardButton(f"{current_day + 2} —á–∏—Å–ª–∞")
        btn44 = types.KeyboardButton(f"{current_day + 3} —á–∏—Å–ª–∞")
        btn55 = types.KeyboardButton(f"{current_day + 4} —á–∏—Å–ª–∞")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn11, btn22, btn33, btn44, btn55, back)
        bot.send_message(
            message.chat.id,
            text="–ö–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É?", reply_markup=markup
        )

    # –ß–ò–°–õ–ê
    # 4
    elif (message.text == f"{current_day + 4} —á–∏—Å–ª–∞"):
        massiv_job_days = raschet(4, 5, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")
    # 3
    elif (message.text == f"{current_day + 3} —á."):
        massiv_job_days = raschet(3, 4, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 3} —á–∏—Å–ª–∞"):
        massiv_job_days = raschet(3, 5, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")


    # 2
    elif (message.text == f"{current_day + 2} —á–∏—Å–ª–æ"):
        massiv_job_days = raschet(2, 3, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 2} —á."):
        massiv_job_days = raschet(2, 4, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 2} —á–∏—Å–ª–∞"):
        massiv_job_days = raschet(2, 5, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    # 1
    elif (message.text == f"{current_day + 1}"):
        massiv_job_days = raschet(1, 2, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 1} —á–∏—Å–ª–æ"):
        massiv_job_days = raschet(1, 3, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 1} —á."):
        massiv_job_days = raschet(1, 4, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day + 1} —á–∏—Å–ª–∞"):
        massiv_job_days = raschet(1, 5, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    # 0
    elif (message.text == f"{current_day}"):
        massiv_job_days = raschet(0, 2, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day} —á–∏—Å–ª–æ"):
        massiv_job_days = raschet(0, 3, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif (message.text == f"{current_day} —á."):
        massiv_job_days = raschet(0, 4, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif message.text == f"{current_day} —á–∏—Å–ª–∞":
        massiv_job_days = raschet(0, 5, current_month)

        user_id = message.from_user.id
        count_days_chill = massiv_job_days
        cursor.execute(
            "INSERT INTO chil (alesha_id, count_days_chill)  VALUES (%s, %s) RETURNING id", (user_id, count_days_chill))
        cursor.fetchone()

        bot.send_message(message.chat.id, text=f"{massiv_job_days}")

    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" or "–≤–µ—Ä–Ω—É—Ç—å—Å—è":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –∫–∞–∫–æ–π –≥—Ä–∞—Ñ–∏–∫")
        button3 = types.KeyboardButton("–ö–æ–≥–¥–∞ —Å–ª–µ–¥—É—é—â–∏–µ —Å—É—Ç–∫–∏ ?")
        markup.add(button1, button2, button3)
        bot.send_message(
            message.chat.id,
            text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(
            message.chat.id,
            text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω"
        )

    us_id = message.from_user.id
    us_name = message.from_user.first_name
    us_sname = message.from_user.last_name
    username = message.from_user.username

    text = message.text
    a = returning(user_id=us_id, user_name=us_name, user_surname=us_sname, username=username)
    db_table_text(text=text, alesha_id=a[0])


bot.polling(none_stop=True)
